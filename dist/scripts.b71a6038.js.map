{"version":3,"sources":["scripts.js"],"names":["cards","document","querySelectorAll","hasFlippedCard","lockBoard","firstCard","secondCard","flipCard","classList","add","checkForMatch","isMatch","dataset","framework","disableCards","unflipCards","removeEventListener","resetBoard","setTimeout","remove","shuffle","forEach","card","randomPos","Math","floor","random","style","order","addEventListener"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,CAAd;AAEA,IAAIC,cAAc,GAAG,KAArB;AACA,IAAIC,SAAS,GAAG,KAAhB;AACA,IAAIC,SAAJ,EAAeC,UAAf;;AAEA,SAASC,QAAT,GAAoB;AAClB,MAAIH,SAAJ,EAAe;AACf,MAAI,SAASC,SAAb,EAAwB;AAExB,OAAKG,SAAL,CAAeC,GAAf,CAAmB,MAAnB;;AAEA,MAAI,CAACN,cAAL,EAAqB;AACnB;AACAA,IAAAA,cAAc,GAAG,IAAjB;AACAE,IAAAA,SAAS,GAAG,IAAZ;AAEA;AACD,GAZiB,CAclB;;;AACAC,EAAAA,UAAU,GAAG,IAAb;AAEAI,EAAAA,aAAa;AACd;;AAED,SAASA,aAAT,GAAyB;AACvB,MAAIC,OAAO,GAAGN,SAAS,CAACO,OAAV,CAAkBC,SAAlB,KAAgCP,UAAU,CAACM,OAAX,CAAmBC,SAAjE;AAEAF,EAAAA,OAAO,GAAGG,YAAY,EAAf,GAAoBC,WAAW,EAAtC;AACD;;AAED,SAASD,YAAT,GAAwB;AACtBT,EAAAA,SAAS,CAACW,mBAAV,CAA8B,OAA9B,EAAuCT,QAAvC;AACAD,EAAAA,UAAU,CAACU,mBAAX,CAA+B,OAA/B,EAAwCT,QAAxC;AAEAU,EAAAA,UAAU;AACX;;AAED,SAASF,WAAT,GAAuB;AACrBX,EAAAA,SAAS,GAAG,IAAZ;AAEAc,EAAAA,UAAU,CAAC,YAAM;AACfb,IAAAA,SAAS,CAACG,SAAV,CAAoBW,MAApB,CAA2B,MAA3B;AACAb,IAAAA,UAAU,CAACE,SAAX,CAAqBW,MAArB,CAA4B,MAA5B;AAEAF,IAAAA,UAAU;AACX,GALS,EAKP,IALO,CAAV;AAMD;;AAED,SAASA,UAAT,GAAsB;AACnBd,EAAAA,cADmB,GACW,KADX;AACHC,EAAAA,SADG,GACkB,KADlB;AAEnBC,EAAAA,SAFmB,GAEO,IAFP;AAERC,EAAAA,UAFQ,GAEa,IAFb;AAGrB;;AAED,CAAC,SAASc,OAAT,GAAmB;AAClBpB,EAAAA,KAAK,CAACqB,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpB,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAhB;AACAJ,IAAAA,IAAI,CAACK,KAAL,CAAWC,KAAX,GAAmBL,SAAnB;AACD,GAHD;AAID,CALD;;AAOAvB,KAAK,CAACqB,OAAN,CAAc,UAAAC,IAAI;AAAA,SAAIA,IAAI,CAACO,gBAAL,CAAsB,OAAtB,EAA+BtB,QAA/B,CAAJ;AAAA,CAAlB","file":"scripts.b71a6038.js","sourceRoot":"..","sourcesContent":["const cards = document.querySelectorAll('.memory-card');\n\nlet hasFlippedCard = false;\nlet lockBoard = false;\nlet firstCard, secondCard;\n\nfunction flipCard() {\n  if (lockBoard) return;\n  if (this === firstCard) return;\n\n  this.classList.add('flip');\n\n  if (!hasFlippedCard) {\n    // first click\n    hasFlippedCard = true;\n    firstCard = this;\n\n    return;\n  }\n\n  // second click\n  secondCard = this;\n\n  checkForMatch();\n}\n\nfunction checkForMatch() {\n  let isMatch = firstCard.dataset.framework === secondCard.dataset.framework;\n\n  isMatch ? disableCards() : unflipCards();\n}\n\nfunction disableCards() {\n  firstCard.removeEventListener('click', flipCard);\n  secondCard.removeEventListener('click', flipCard);\n\n  resetBoard();\n}\n\nfunction unflipCards() {\n  lockBoard = true;\n\n  setTimeout(() => {\n    firstCard.classList.remove('flip');\n    secondCard.classList.remove('flip');\n\n    resetBoard();\n  }, 1500);\n}\n\nfunction resetBoard() {\n  [hasFlippedCard, lockBoard] = [false, false];\n  [firstCard, secondCard] = [null, null];\n}\n\n(function shuffle() {\n  cards.forEach(card => {\n    let randomPos = Math.floor(Math.random() * 12);\n    card.style.order = randomPos;\n  });\n})();\n\ncards.forEach(card => card.addEventListener('click', flipCard));"]}